name: Assign Random Reviewers
on:
  pull_request:
    types: [opened, reopened]
jobs:
  assign-reviewers:
    runs-on: ubuntu-latest

    steps:
      # 1
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2
      - name: Assign Random Reviewers
        id: assign-reviewers 
        uses: actions/github-script@v6
        with:
          script: |
            const reviewers = ["gahyeon-yang", "kirinkiri", "bangsinchur", "junbaehyun"];
            const prAuthor = context.payload.pull_request.user.login;

            const filteredReviewers = reviewers.filter(r => r !== prAuthor);

            function shuffleArray(array) {
                for (let i = array.length - 1; i > 0; i--) {
                    const j = Math.floor(Math.random() * (i + 1));
                    [array[i], array[j]] = [array[j], array[i]];
                }
                return array;
            }
            
            const shuffledReviewers = shuffleArray(filteredReviewers);

            const selectedReviewers = shuffledReviewers.slice(0, 2);
            
            await github.rest.pulls.requestReviewers({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              reviewers: selectedReviewers,
            });

            console.log(`선택된 리뷰어: ${selectedReviewers.join(", ")}`);
            return selectedReviewers.join(", ");
          result-encoding: string

     # 3
      - name: Send Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: "🚀 새로운 PR이 도착했습니다!"
          fields: author,pullRequest
          text: "리뷰어: ${{ steps.assign-reviewers.outputs.result }}"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_FE }}
        if: always()
