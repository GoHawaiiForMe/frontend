{"version":3,"file":"../pages/api/sentry-example-api.js","mappings":"sbAAA,6FCUA,4BAAwC,CACxC,cACA,eACA,OAGA,uBAEA,OACA,KAIA,sCACA,kBAIA,oCACA,QAIA,CAnBA,CACA,CAAC,EAAC,qBGEE,mBAAmB,GAAG,SAAS,CAAC,uHFjBpC,IAAM,EAA4B,sECCnB,SAASA,CAAY,CAAEC,CAAG,EACvC,EADsBD,IACZE,KAAM,kCAElB,ICeI,SAAS,IAAI,EAAiB,UAA2C,CAA/C,CAAiD,OAAtC,EAAc,OAAO,CAE5D,EAAsB,CAF8B,CAEhB,OAAO,CAAC,GAAT,IAAhB,GACyB,EAAnC,OAAO,IAEhB,GAAsB,CAAa,CAAC,IAFP,EATT,EAcW,MAHZ,EAGsB,CAHnB,CAGqB,CAAb,EAMjB,CACb,GADU,CACG,CACb,EAtB2C,CAsBxC,CAAE,CACH,GAAG,EAAW,GAAG,CACjB,IADa,YACG,EAAE,CACtB,CAAG,EADuB,EAIL,EAMjB,IACF,EAAiB,IAPD,IAMA,EAAE,CANoB,CAAC,cAOS,CAAC,EAAgB,YAAF,cAA2B,CAAC,CAAC,IAGxF,EAAmB,EC7CzB,EAAe,OAAK,CAAC,ED6CC,UC7CmB,CAE5B,CAF6B,CAEpB,OAAK,CAAC,EAAQ,SAFP,CAItB,MAAwB,gBAFK,KAEc,EAClD,YACA,KAAc,GAAS,WACvB,+BACA,mCAEA,cACA,WACA,CAAK,CACL,OAXmB,CAWP,EACZ,CAAC,gBChBD,4BAA4C,CAC5C,cACA,eACA,QACA,CACA,CAAC,EAAC,IACF,cAkBA,OAfA,gBAGA,wBAIA,sBAIA,wBAGA,gBACA,CACA,CAAC,GAAG,mBCpBI,kBAAoF","sources":["webpack://frontend/external commonjs \"next/dist/compiled/next-server/pages-api.runtime.prod.js\"","webpack://frontend/./node_modules/next/dist/build/templates/helpers.js?4703","webpack://frontend/external commonjs \"@sentry/nextjs\"","webpack://frontend/src/pages/api/sentry-example-api.js","webpack://frontend/sentry-wrapper-module","webpack://frontend/","webpack://frontend/./node_modules/next/dist/server/route-kind.js?45ad","webpack://frontend/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["module.exports = require(\"next/dist/compiled/next-server/pages-api.runtime.prod.js\");","/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */ \"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"hoist\", {\n    enumerable: true,\n    get: function() {\n        return hoist;\n    }\n});\nfunction hoist(module, name) {\n    // If the name is available in the module, return it.\n    if (name in module) {\n        return module[name];\n    }\n    // If a property called `then` exists, assume it's a promise and\n    // return a promise that resolves to the name.\n    if ('then' in module && typeof module.then === 'function') {\n        return module.then((mod)=>hoist(mod, name));\n    }\n    // If we're trying to hoise the default export, and the module is a function,\n    // return the module itself.\n    if (typeof module === 'function' && name === 'default') {\n        return module;\n    }\n    // Otherwise, return undefined.\n    return undefined;\n}\n\n//# sourceMappingURL=helpers.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@sentry/nextjs\");","// A faulty API route to test Sentry's error monitoring\r\nexport default function handler(_req, res) {\r\n  throw new Error(\"Sentry Example API Route Error\");\r\n  res.status(200).json({ name: \"John Doe\" });\r\n}\r\n","import * as Sentry from '@sentry/nextjs';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\n\n/*\n * This file is a template for the code which will be substituted when our webpack loader handles API files in the\n * `pages/` directory.\n *\n * We use `__SENTRY_WRAPPING_TARGET_FILE__.cjs` as a placeholder for the path to the file being wrapped. Because it's not a real package,\n * this causes both TS and ESLint to complain, hence the pragma comments below.\n */\n\n\nconst userApiModule = serverComponentModule ;\n\n// Default to undefined. It's possible for Next.js users to not define any exports/handlers in an API route. If that is\n// the case Next.js will crash during runtime but the Sentry SDK should definitely not crash so we need to handle it.\nlet userProvidedHandler = undefined;\n\nif ('default' in userApiModule && typeof userApiModule.default === 'function') {\n  // Handle when user defines via ESM export: `export default myFunction;`\n  userProvidedHandler = userApiModule.default;\n} else if (typeof userApiModule === 'function') {\n  // Handle when user defines via CJS export: \"module.exports = myFunction;\"\n  userProvidedHandler = userApiModule;\n}\n\nconst origConfig = userApiModule.config || {};\n\n// Setting `externalResolver` to `true` prevents nextjs from throwing a warning in dev about API routes resolving\n// without sending a response. It's a false positive (a response is sent, but only after we flush our send queue), and\n// we throw a warning of our own to tell folks that, but it's better if we just don't have to deal with it in the first\n// place.\nconst config = {\n  ...origConfig,\n  api: {\n    ...origConfig.api,\n    externalResolver: true,\n  },\n};\n\nlet wrappedHandler = userProvidedHandler;\n\nif (wrappedHandler && undefined) {\n  wrappedHandler = Sentry.wrapApiHandlerWithSentryVercelCrons(wrappedHandler, undefined);\n}\n\nif (wrappedHandler) {\n  wrappedHandler = Sentry.wrapApiHandlerWithSentry(wrappedHandler, '/api/sentry-example-api');\n}\n\nconst wrappedHandler$1 = wrappedHandler;\n\nexport { config, wrappedHandler$1 as default };\n","import { PagesAPIRouteModule } from \"next/dist/server/route-modules/pages-api/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { hoist } from \"next/dist/build/templates/helpers\";\n// Import the userland code.\nimport * as userland from \"private-next-pages/api/sentry-example-api.js\";\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default');\n// Re-export config.\nexport const config = hoist(userland, 'config');\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n    definition: {\n        kind: RouteKind.PAGES_API,\n        page: \"/api/sentry-example-api\",\n        pathname: \"/api/sentry-example-api\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland\n});\n\n//# sourceMappingURL=pages-api.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"RouteKind\", {\n    enumerable: true,\n    get: function() {\n        return RouteKind;\n    }\n});\nvar RouteKind = /*#__PURE__*/ function(RouteKind) {\n    /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */ RouteKind[\"PAGES\"] = \"PAGES\";\n    /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */ RouteKind[\"PAGES_API\"] = \"PAGES_API\";\n    /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */ RouteKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */ RouteKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */ RouteKind[\"IMAGE\"] = \"IMAGE\";\n    return RouteKind;\n}({});\n\n//# sourceMappingURL=route-kind.js.map","\"use strict\";\nif (process.env.NEXT_RUNTIME === 'edge') {\n    module.exports = require('next/dist/server/route-modules/pages-api/module.js');\n} else {\n    if (process.env.NODE_ENV === 'development') {\n        module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js');\n    } else if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js');\n    } else {\n        module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js');\n    }\n}\n\n//# sourceMappingURL=module.compiled.js.map"],"names":["handler","res","Error"],"sourceRoot":""}